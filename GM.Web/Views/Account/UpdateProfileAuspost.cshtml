@model GM.ViewModels.UpdateProfileAuspostViewModel

@{
    ViewBag.Title = "Update Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
<div class="myaccountmenu updateprofile-auspost">
@Html.Partial("_LeftNavigation")

@using (Html.BeginForm("UpdateProfileAuspost", "Account", FormMethod.Post, new {Class = "form-horizontal", role = "form", enctype = "multipart/form-data"}))
{

    <div class="container update-account">
        <div class="navbar-main">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <h1 class="panel-title">Update profile</h1>
                     @Html.ValidationSummary(true)
                    <p>Personal and contact information</p>
                </div>
                <div class="panel-body">
                    <div class="row personal-info">
                        <div class="col-md-12 col-lg-12">
                            <!-- Text input-->
                            <div class="form-group name">
                                <label class="col-md-1 col-lg-1 control-label" for="textinput">Name</label>
                                <div class="name-field col-md-2 col-lg-2 col-md-offset-1">
                                    @Html.TextBoxFor(model => model.FirstName, new {placeholder = "First name", Class = "form-control text-field"})
                                    @Html.ValidationMessageFor(model => model.FirstName)
                                </div>
                                <div class="name-field col-md-2 col-lg-2">
                                    @Html.TextBoxFor(model => model.LastName, new {placeholder = "Last name", Class = "form-control text-field"})
                                    @Html.ValidationMessageFor(model => model.LastName)
                                </div>
                            </div>

                            <!-- Text input-->
                            <div class="form-group profile-image">
                                <label class="col-md-2 col-lg-2 control-label" for="textinput">Profile image</label>
                                <div class="col-md-2 col-lg-2 col-md-offset-1">
                                    @if (Model.PhotoId != null)
                                    {
                                        @Html.HiddenFor(model => model.PhotoId)
                                        <img id="profileImg" src="@Url.Action("Upload", "General", new {id = Model.PhotoId})" alt="@Model.FirstName" style="height: 98px; width: 98px;" />
                                    }
                                    else
                                    {
                                        <img id="profileImg" src="~/Images/update-profile-pic.png" alt=""  style="height: 98px; width: 98px;" />
                                    }
                                    <span class="photoicon"></span>
                                </div>
                                                                
                                <div class="col-md-2 col-lg-2 image-size-description">
                                    <h6>Correct image size is 98 x 98 pixels.</h6>
                                </div>

                                 <div class="col-md-2 col-lg-2 col-md-offset-3 change-image-button">
                                    <div class="pull-right file-input-wrapper">
                                        <button class="btn-file-input btn changeBtn">Change image</button>
                                        <input type="file" name="Photo" id="photoUpload" class="btn changeBtn" value="Change image" />
                                    </div>
                                </div> 
                            </div>

                            <!-- Text input-->
@*                            <div class="form-group address">
                                <label class="col-md-2 col-lg-2 control-label" for="textinput">Address</label>
                                <div class="col-md-3 col-lg-3 col-md-offset-1">
                                    <p class="form-control-static">@Model.Address</p>
                                </div>
                                <div class="col-md-2 col-lg-2 col-md-offset-4">
                                    <div class="pull-right ">
                                        <input type="submit" class="btn changeBtn" data-popup-target="#change-address-popup" value="Change address"/>
                                        <div id="change-address-popup" class="popup">
                                            <div class="popup-body">
                                                <span class="popup-exit"></span>
                                                <div class="popup-content">
                                                    <span class="popup-img"></span>
                                                    <h2 class="popup-title">Change my address.</h2>
                                                    <p>Please email support with your details to request an address change.</p>
                                                    <a href="https://greenmoney.desk.com/customer/portal/emails/new" class="btn sendEmailBtn js-send-change-address-email">Change address</a>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="popup-overlay"></div>
                                    </div>
                                </div>
                            </div>*@

                            <!-- Text input-->
                            <div class="form-group email-address">
                                <label class="col-md-2 col-lg-2 control-label" for="textinput">Email adress</label>
                                <div class="col-md-5 col-lg-5 col-md-offset-1">
                                    @Html.HiddenFor(model=>model.Email)
                                    @Html.TextBoxFor(model => model.CompanyEmail, new { Class = "form-control text-field auspost-email", type = "text", value = Model.CompanyEmail, required = "required"})
                                    @*<input type="email" name="email" id="email" required placeholder="" class="form-control text-field" value="emma.scott" style="height: 40px; width: 49%">*@
                                    <span class="input-group-addon text-field up-emailaddon">
                                        @Model.CompanyEmailDomain 
                                        @if (Model.CompanyEmailDomain != null)
                                        {
                                           for (var i = 0; i < 16 - Model.CompanyEmailDomain.Length; i++)
                                            { <text>&nbsp;</text> }
                                        }

                                    </span>
                                    <span id="email_validation" class="error"></span>
                                </div>
                                <div class="col-md-4 col-lg-4">
                                <h6>Changing your email address will log you out. You will then need to re-verify your email address.</h6>
                                </div>
                            </div>

@*                            <!-- Text input-->
                            <div class="form-group email-address">
                                    <label class="col-md-2 col-lg-2 control-label" for="textinput">Email adress</label>
                                    <div class="col-md-5 col-lg-5 col-md-offset-1">
                                        @Html.HiddenFor(model=>model.Email)
                                        @Html.TextBoxFor(model => model.CompanyEmail, new {placeholder = Model.Email, Class = "form-control text-field", type = "text", value = Model.CompanyEmail, required = "required", style="height: 40px; width: 49%;"})
                                        <span class="input-group-addon text-field up-emailaddon">@Model.CompanyEmailDomain</span>
                                        <span id="email_validation" class="error"></span>
                                    </div>
                                    <div class="col-md-4 col-lg-4">
                                    <h6>Changing your email address will log you out. You will then need to re-verify your email address.</h6>
                                </div>
                            </div>*@

                            <!-- Text input-->
                            <div class="form-group update-profile-mobile">
                                <label class="col-md-2 col-lg-2 control-label" for="textinput">Workplace</label>
                                <div class="col-md-5 col-lg-5 col-md-offset-1">
                                    @Html.DropDownListFor(m => m.State, Model.States, "Select state", new { @class = "empty custom-dropdown cat_list", data_placeholder = "Select state" })
                                    @Html.DropDownListFor(m => m.Subrp, Model.Subrps, "Select city/suburb", new { @class = "empty custom-dropdown suburb-list", data_placeholder = "Select city/suburb" })
                                    @Html.DropDownListFor(m => m.StreetName, Model.StreetNames, "Street/office location", new { @class = "empty custom-dropdown cat_list", data_placeholder = "Street/office location" })                            
                                </div>
                            </div>

                            <!-- Text input-->
                            <div class="form-group update-profile-mobile">
                                <label class="col-md-1 col-lg-1 control-label" for="textinput">Business unit</label>
                                <div class="col-md-5 col-lg-5 col-md-offset-1">
                                    @Html.DropDownListFor(m => m.StreetType, Model.StreetTypes, "Select team", new { @class = "empty custom-dropdown cat_list", data_placeholder = "Team" })
                                </div>
                            </div>    
                                                    
                            <!-- Text input-->
                            <div class="form-group update-profile-mobile">
                                <label class="col-md-1 col-lg-1 control-label" for="textinput">Employment type</label>
                                <div class="col-md-5 col-lg-5 col-md-offset-1">
                                    @Html.DropDownListFor(m => m.EmploymentType, Model.EmploymentTypes, "Select employment type", new { @class = "empty custom-dropdown cat_list", data_placeholder = "Employment type" })
                                </div>
                            </div>  

                            <!-- Text input-->
                            <div class="form-group update-profile-mobile">
                                <label class="col-md-2 col-lg-2 control-label" for="textinput">Mobile phone</label>
                                <div class="col-md-5 col-lg-5 col-md-offset-1">
                                    @Html.TextBoxFor(model => model.PhoneNumber, new { placeholder = Model.PhoneNumber, Class = "form-control text-field", value = Model.PhoneNumber })
                                    @Html.ValidationMessageFor(model => model.PhoneNumber)
                                    <span id="mobile_validation" class="error"></span>
                                </div>
                            </div>

                            <!-- Text input-->
                            <div class="form-group birthdate-dropdown">
                                <label class="col-md-1 col-lg-1 control-label" for="textinput">Birth date</label>
                                <div class="col-md-5 col-lg-5 col-md-offset-1">
                                    @Html.DropDownListFor(m => m.DateOfBirthDay, Model.Days, "Day", new { @class = "custom-dropdown col-md-2 col-lg-2 birth-day", data_placeholder = "Day" })
                                    @Html.DropDownListFor(m => m.DateOfBirthMonth, Model.Months, "Month", new { @class = "custom-dropdown col-md-3 col-lg-3 birth-month", data_placeholder = "Month" })
                                    @Html.DropDownListFor(m => m.DateOfBirthYear, Model.Year, "Year", new { @class = "custom-dropdown col-md-3 col-lg-3 birth-year", data_placeholder = "Year" })
                                </div>
                            </div>

                            <!-- Text input-->
                            <div class="form-group gender-dropdown" style="border-bottom: 0;">
                                <label class="col-md-1 col-lg-1 control-label" for="textinput">Gender</label>
                                <div class="col-md-4 col-lg-4 col-md-offset-1">
                                    @Html.DropDownListFor(m => m.Sex, Model.Genders, "Select gender", new { @class = "custom-dropdown empty" })
                                </div>
                            </div>

                        </div>
                        <!-- /.col-lg-12 -->
                    </div>
                    <!-- /.row personal-info -->
                </div>
            </div>
        </div>
    </div>
    <!-- Update profile - personal and contact information-->

    <div class="container notifications">
        <div class="navbar-main">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <p>Notifications</p>
                </div>
                <div class="panel-body">
                    <div class="row notification-checkbox">
                        <div class="col-md-12 col-lg-12">
                            <!-- Text input-->
                            <input type="hidden" value="false" name="SendEmailUpdates"/>
                            <input type="hidden" value="false" name="PostToFacebook"/>
                            <!-- Text input-->
                            <div class="form-group push-notification" style="border-bottom: 0;">
                                <div class="col-md-2 col-lg-2">
                                    <div class="input-group">
                                        <div class="toggle">
                                            @if (Model.PushNotifications)
                                            {
                                                <input id="toggleTwo" type="checkbox" value="true"  name="PushNotifications" data-val="true"/>
                                                <input type="hidden" value="true" name="PushNotifications"/>
                                            }
                                            else
                                            {
                                                <input id="toggleTwo" type="checkbox" value="false" checked="checked" name="PushNotifications" data-val="false" />
                                                <input type="hidden" value="false" name="PushNotifications"/>
                                            }
                                            <label for="toggleTwo">
                                                <!-- class="attention" -->
                                                <i></i>
                                            </label>
                                        </div>
                                        <!-- /toggle -->

                                    </div>
                                </div>
                                <span class="col-md-4 col-lg-4 help-inline">Push notification to mobile phone</span>
                            </div>

                        </div>
                        <!-- /.col-lg-12 -->
                    </div>
                    <!-- /.row notificatio-checkbox -->
                </div>
            </div>
        </div>
    </div>
    <!-- personal and contact information -->

    <div class="container change-password">
        <div class="navbar-main">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <p>Change password</p>
                </div>
                <div class="panel-body">
                    <div class="row password-change">
                        <div class="col-md-12 col-lg-12 password-fields">
                            <!-- Text input-->
                            <div class="form-group old-password">
                                <label class="col-md-2 col-lg-2" for="textinput">Old password</label>
                                <div class="col-md-5 col-lg-5 col-md-offset-1">
                                    @Html.PasswordFor(model => model.OldPassword, new { Class = "form-control password-field", placeholder = "Enter", autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.OldPassword)
                                </div>
                            </div>

                            <!-- Text input-->
                            <div class="form-group new-password">
                                <label class="col-md-2 col-lg-2" for="textinput">New password</label>
                                <div class="col-md-5 col-lg-5 col-md-offset-1">
                                    @Html.PasswordFor(model => model.NewPassword, new { Class = "form-control password-field", placeholder = "Enter", autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.NewPassword)
                                </div>
                                <div class="col-md-4 col-lg-4">
                                    <h6 class="field-descr">Leave these fields blank to keep your password the same.</h6>
                                </div>
                            </div>

                            <!-- Text input-->
                            <div class="form-group confirm-password">
                                <label class="col-md-3 col-lg-3" for="textinput">Confirm new password</label>
                                <div class="col-md-5 col-lg-5">
                                    @Html.PasswordFor(model => model.ConfirmNewPassword, new { Class = "form-control password-field", placeholder = "Enter", autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.ConfirmNewPassword)
                                </div>
                            </div>
                        </div>
                        <!-- /.col-lg-12 -->
                    </div>
                    <!-- /.row password-change-->
                </div>
            </div>
        </div>
    </div>
    <!-- change password -->

    <div class="container validating">
        <div class="row submit-form-buttons">
            <div class="col-md-8 col-lg-8">
                
            </div>
            <div class="col-md-4 col-lg-4">
                <input type="submit" class="btn pull-right mainBtn" value="Save changes"/>
                <input type="button" value="Cancel" class="btn secondaryBtn" onclick="location.href='@Url.Action("MyProfile")'"/>
            </div>
        </div>
    </div>
}

</div>
</div>
@section Styles {
   <link href="~/Css/auspost.css" rel="stylesheet" />
   <link href="~/Css/ausPostregistration.css" rel="stylesheet" />
}
<style type="text/css">
    .field-validation-error {
        color: #b94a48;
    }
    .validation-summary-errors {
        color: #b94a48;
        list-style: none!important;
        padding-bottom: 10px!important;
    }
</style>
